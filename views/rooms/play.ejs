<h1 id="vs"></h1>
<div id='announcements'>Waiting on other player to join</div>

<div class='container'>
    <div class='row' id="board_row">
        <div class='col-xs-4 col-xs-4'>
            <!--  -->
            <div id="board"></div>
        </div>
        <div class='col-xs-4 col-xs-4'>
            <button id="ready_btn">I'm Ready!</button>
            <!--  -->
            <div id="opp_board"></div>
        </div>
    </div>

    </br>

    <div class='row'>
        <div class='col-xs-4 col-xs-4'>
            <div class="well" id="chat" style="width: 350px; height: 75px; margin-top: 30px;"></div><br>
            <input type="text" id="new_message" onkeydown="if (event.keyCode == 13) sendMessage();event.stopPropagation();">
            <button onclick="sendMessage()">send</button>
        </div>

        <div class='col-xs-4 col-xs-4'>
            <div class="well" id="log"></div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="theModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="theModalTitle">
                    <!-- Title text gets put here -->
                </h4>
            </div>
            <div class="modal-body" id="theModalBody">
                <!-- Body text gets put here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src='/javascripts/maze.js'></script>
<script src="/socket.io/socket.io.js"></script>
<script src='/javascripts/play.js'></script>
<script src='/javascripts/chat.js'></script>
<script type="text/javascript">
    $(document).ready(function() {
        socket.emit('join_room', {room: '<%= room %>'});
    });

    function toggle_ready_button(state) {
        if(state) {
            $('#ready_btn').removeAttr('disabled');
        } else {
            $('#ready_btn').attr('disabled', 'disabled');
        }
    };

    $('#ready_btn').on('click', function() {
        // validate maze on server side
        // if it has been validated, we can emit 'player_ready'
        socket.emit('player_ready',
            {   name: "<%= name %>",
                room: "<%= room %>",
                edge_map: edge_map,
                true_connections: connections,
                start: maze.getStartId(),
                end: maze.getEndId()
            }
        );

        toggle_ready_button(false);
    });

    socket.on('start_play_phase', function(data) {
        $('#announcements').remove();
        $('#vs').html("It's on! " + data.player1 + " vs " + data.player2);

        disable_board_modify = true;

        //
        // ***FIX ME***
        //
        from_square = data.start;
        start = data.start;
        $("#o"+from_square).removeClass("start").addClass("current");

        // Creates a new board element, this will be what the user uses
        // to see their progress and make their next move
        create_board_html("#opp_board", dim, true, start);

        $("body").not('#new_message').keydown(function() {
            
            
            switch(event.which){
                case UP:
                case DOWN:
                case RIGHT:
                case LEFT:
                    event.preventDefault();
                    moveFromKeyboard(event.which);
                    break;
                case 13:
                    if (current_turn) submitMove();
                default:
                    break;
            }
            
        });

        $('#ready_btn').remove();
        $('#board_row').append($("<button>", {id: "submit", text:"Submit"}).wrap("<td></td>").click(submitMove));
    });

    function submitMove() {
        // check if it could be a valid move. This does not check if the player has already
        // found a wall here.
        if (valid_move(from_square, to_square, dim)) {
            // if valid, submit
            socket.emit('move_submit', {room: "<%= room %>", from: from_square, to: to_square});
             console.log("Move submitted");
        } else {
            console.log("Not a valid move");
        }
    }
</script>
