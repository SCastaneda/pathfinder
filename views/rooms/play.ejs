<h1>Game Room</h1>

<div id='announcements'>Waiting on other player to join</div>

<table>
    <tr id="board_row">
        <td><div id="board"></div></td>
        <td><div id="opp_board"></div></td>
    </tr>
    <tr id="info_row">
        <td><textarea id="chat" style="resize:none" cols="40" rows="5" readonly disabled></textarea></td>
        <td><textarea id="log" style="resize:none" cols="20" rows="5" readonly disabled></textarea></td>
    </tr>
</table>

<button id="ready_btn">I'm Ready!</button>



<script type="text/javascript">
    function toggle_ready_button(state) {
        if(state) {
            $('#ready_btn').removeAttr('disabled');
        } else {
            $('#ready_btn').attr('disabled', 'disabled');
        }
    }

</script>
<script src='/javascripts/maze.js'></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
    var dim;
    var socket = io.connect("");
    socket.emit('join_room', {room: '<%= room %>'});

    socket.on('disconnect', go_home);
    socket.on('start_create_maze_phase', function(data) {

        // assigning this variable to access later when we create the new board element
        // this may not be needed
        dim = data['maze_dim'];

        generate_board(data['maze_dim']);
        $('#announcements').html("Build your maze, and click 'I'm ready', when you're done!");
    });

    $('#ready_btn').on('click', function() {
        // validate maze on server side
        // if it has been validated, we can emit 'player_ready'
        socket.emit('player_ready', 
            {   name: "<%= name %>", 
                room: "<%= room %>", 
                edge_map: edge_map, 
                true_connections: connections,
                start: maze.getStartId(),
                end: maze.getEndId()  
            }
        );
    });

    socket.on('waiting_on_other_player', function() {
        $('#ready_btn').html('waiting on the other player!');
        $('#ready_btn').attr('disabled', 'disabled');
        $('#announcements').html('waiting on the other player...');
    });

    socket.on('start_play_phase', function(data) {
        $('#announcements').html("Play phase started!");

        disable_board_modify = true;

        // Creates a new board element, this will be what the user uses 
        // to see their progress and make their next move
        create_board_html("#opp_board", dim, true);

        $('#ready_btn').remove();
        $('#board_row').append($("<button>", {id: "submit", text:"Submit"}).click(function() {
            console.log("OMG SUBMIT WAS CLICKED");
        })).wrap("<td></td>");
        
    });


    /* START: new functions for turn-by-turn gameplay */
    // to submit a move to the server:
    // socket.emit('move_submit', {room: "<%= room %>", from: 1, to: 6 });

    // this comes back after a move was submitted:
    socket.on('move_response', function(data) { console.log(data); });

    // this comes back when it's the other player's turn
    socket.on('other_players_turn', function(data) {
        console.log("it's the other player's turn");

        current_turn = false;
    });

    // this comes back when it's your turn
    socket.on('your_turn', function(data) {
        //there's no data
        console.log("It's your turn!");

        current_turn = true;
    });    

    // comes back when a player wins, get's checked after every move
    socket.on('game_over', function(data) { console.log(data); });

    // server side maze-validation response
    socket.on('maze_validation', function(data) { console.log(data); });
    /* END: new functions for turn-by-turn gameplay */

    function go_home(data) {
        window.location.replace("/");
    }
</script>